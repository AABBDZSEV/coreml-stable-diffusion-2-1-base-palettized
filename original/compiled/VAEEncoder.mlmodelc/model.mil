program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.30.0"}, {"coremlc-version", "1839.0.0"}, {"coremltools-component-torch", "2.0.1"}, {"coremltools-version", "7.0b1"}})]
{
    func main<ios16>(tensor<fp16, [1, 3, 512, 512]> z) {
            tensor<int32, []> var_7 = const()[name = tensor<string, []>("op_7"), val = tensor<int32, []>(-1)];
            tensor<int32, []> var_17 = const()[name = tensor<string, []>("op_17"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_35 = const()[name = tensor<string, []>("op_35"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_37 = const()[name = tensor<string, []>("op_37"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 3, 3, 3]> encoder_conv_in_weight_to_fp16 = const()[name = tensor<string, []>("encoder_conv_in_weight_to_fp16"), val = tensor<fp16, [128, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [128]> encoder_conv_in_bias_to_fp16 = const()[name = tensor<string, []>("encoder_conv_in_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7040)))];
            tensor<fp16, [1, 128, 512, 512]> input_1_cast = conv(bias = encoder_conv_in_bias_to_fp16, dilations = var_37, groups = var_17, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_35, weight = encoder_conv_in_weight_to_fp16, x = z)[name = tensor<string, []>("input_1_cast")];
            tensor<int32, [5]> reshape_0_shape_0 = const()[name = tensor<string, []>("reshape_0_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_0_cast = reshape(shape = reshape_0_shape_0, x = input_1_cast)[name = tensor<string, []>("reshape_0_cast")];
            tensor<int32, [3]> reduce_mean_0_axes_0 = const()[name = tensor<string, []>("reduce_mean_0_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_0_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_0_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_0_cast = reduce_mean(axes = reduce_mean_0_axes_0, keep_dims = reduce_mean_0_keep_dims_0, x = reshape_0_cast)[name = tensor<string, []>("reduce_mean_0_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> sub_0_cast = sub(x = reshape_0_cast, y = reduce_mean_0_cast)[name = tensor<string, []>("sub_0_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> square_0_cast = square(x = sub_0_cast)[name = tensor<string, []>("square_0_cast")];
            tensor<int32, [3]> reduce_mean_2_axes_0 = const()[name = tensor<string, []>("reduce_mean_2_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_2_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_2_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_2_cast = reduce_mean(axes = reduce_mean_2_axes_0, keep_dims = reduce_mean_2_keep_dims_0, x = square_0_cast)[name = tensor<string, []>("reduce_mean_2_cast")];
            tensor<fp16, []> add_0_y_0_to_fp16 = const()[name = tensor<string, []>("add_0_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_0_cast = add(x = reduce_mean_2_cast, y = add_0_y_0_to_fp16)[name = tensor<string, []>("add_0_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_0_cast = sqrt(x = add_0_cast)[name = tensor<string, []>("sqrt_0_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_0_cast = real_div(x = sub_0_cast, y = sqrt_0_cast)[name = tensor<string, []>("real_div_0_cast")];
            tensor<int32, [4]> reshape_1_shape_0 = const()[name = tensor<string, []>("reshape_1_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_1_cast = reshape(shape = reshape_1_shape_0, x = real_div_0_cast)[name = tensor<string, []>("reshape_1_cast")];
            tensor<fp16, [128]> add_1_mean_0_to_fp16 = const()[name = tensor<string, []>("add_1_mean_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7360)))];
            tensor<fp16, [128]> add_1_variance_0_to_fp16 = const()[name = tensor<string, []>("add_1_variance_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7680)))];
            tensor<fp16, [128]> add_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_1_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8000)))];
            tensor<fp16, [128]> add_1_beta_0_to_fp16 = const()[name = tensor<string, []>("add_1_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8320)))];
            tensor<fp16, []> add_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_1_cast = batch_norm(beta = add_1_beta_0_to_fp16, epsilon = add_1_epsilon_0_to_fp16, gamma = add_1_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_1_cast)[name = tensor<string, []>("add_1_cast")];
            tensor<fp16, [1, 128, 512, 512]> input_5_cast = silu(x = add_1_cast)[name = tensor<string, []>("input_5_cast")];
            tensor<int32, [2]> var_56 = const()[name = tensor<string, []>("op_56"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_58 = const()[name = tensor<string, []>("op_58"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8640)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303616)))];
            tensor<fp16, [1, 128, 512, 512]> input_7_cast = conv(bias = encoder_down_blocks_0_resnets_0_conv1_bias_to_fp16, dilations = var_58, groups = var_17, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_56, weight = encoder_down_blocks_0_resnets_0_conv1_weight_to_fp16, x = input_5_cast)[name = tensor<string, []>("input_7_cast")];
            tensor<int32, [5]> reshape_4_shape_0 = const()[name = tensor<string, []>("reshape_4_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_4_cast = reshape(shape = reshape_4_shape_0, x = input_7_cast)[name = tensor<string, []>("reshape_4_cast")];
            tensor<int32, [3]> reduce_mean_3_axes_0 = const()[name = tensor<string, []>("reduce_mean_3_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_3_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_3_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_3_cast = reduce_mean(axes = reduce_mean_3_axes_0, keep_dims = reduce_mean_3_keep_dims_0, x = reshape_4_cast)[name = tensor<string, []>("reduce_mean_3_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> sub_2_cast = sub(x = reshape_4_cast, y = reduce_mean_3_cast)[name = tensor<string, []>("sub_2_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> square_1_cast = square(x = sub_2_cast)[name = tensor<string, []>("square_1_cast")];
            tensor<int32, [3]> reduce_mean_5_axes_0 = const()[name = tensor<string, []>("reduce_mean_5_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_5_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_5_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_5_cast = reduce_mean(axes = reduce_mean_5_axes_0, keep_dims = reduce_mean_5_keep_dims_0, x = square_1_cast)[name = tensor<string, []>("reduce_mean_5_cast")];
            tensor<fp16, []> add_2_y_0_to_fp16 = const()[name = tensor<string, []>("add_2_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_2_cast = add(x = reduce_mean_5_cast, y = add_2_y_0_to_fp16)[name = tensor<string, []>("add_2_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_1_cast = sqrt(x = add_2_cast)[name = tensor<string, []>("sqrt_1_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_1_cast = real_div(x = sub_2_cast, y = sqrt_1_cast)[name = tensor<string, []>("real_div_1_cast")];
            tensor<int32, [4]> reshape_5_shape_0 = const()[name = tensor<string, []>("reshape_5_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_5_cast = reshape(shape = reshape_5_shape_0, x = real_div_1_cast)[name = tensor<string, []>("reshape_5_cast")];
            tensor<fp16, [128]> add_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_3_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(303936)))];
            tensor<fp16, [128]> add_3_beta_0_to_fp16 = const()[name = tensor<string, []>("add_3_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(304256)))];
            tensor<fp16, []> add_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_3_cast = batch_norm(beta = add_3_beta_0_to_fp16, epsilon = add_3_epsilon_0_to_fp16, gamma = add_3_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_5_cast)[name = tensor<string, []>("add_3_cast")];
            tensor<fp16, [1, 128, 512, 512]> input_11_cast = silu(x = add_3_cast)[name = tensor<string, []>("input_11_cast")];
            tensor<int32, [2]> var_68 = const()[name = tensor<string, []>("op_68"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_70 = const()[name = tensor<string, []>("op_70"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_1_pad_type_0 = const()[name = tensor<string, []>("hidden_states_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_1_pad_0 = const()[name = tensor<string, []>("hidden_states_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(304576)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(599552)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_1_cast = conv(bias = encoder_down_blocks_0_resnets_0_conv2_bias_to_fp16, dilations = var_70, groups = var_17, pad = hidden_states_1_pad_0, pad_type = hidden_states_1_pad_type_0, strides = var_68, weight = encoder_down_blocks_0_resnets_0_conv2_weight_to_fp16, x = input_11_cast)[name = tensor<string, []>("hidden_states_1_cast")];
            tensor<fp16, [1, 128, 512, 512]> var_73_cast = add(x = input_1_cast, y = hidden_states_1_cast)[name = tensor<string, []>("op_73_cast")];
            tensor<int32, [5]> reshape_8_shape_0 = const()[name = tensor<string, []>("reshape_8_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_8_cast = reshape(shape = reshape_8_shape_0, x = var_73_cast)[name = tensor<string, []>("reshape_8_cast")];
            tensor<int32, [3]> reduce_mean_6_axes_0 = const()[name = tensor<string, []>("reduce_mean_6_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_6_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_6_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_6_cast = reduce_mean(axes = reduce_mean_6_axes_0, keep_dims = reduce_mean_6_keep_dims_0, x = reshape_8_cast)[name = tensor<string, []>("reduce_mean_6_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> sub_4_cast = sub(x = reshape_8_cast, y = reduce_mean_6_cast)[name = tensor<string, []>("sub_4_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> square_2_cast = square(x = sub_4_cast)[name = tensor<string, []>("square_2_cast")];
            tensor<int32, [3]> reduce_mean_8_axes_0 = const()[name = tensor<string, []>("reduce_mean_8_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_8_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_8_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_8_cast = reduce_mean(axes = reduce_mean_8_axes_0, keep_dims = reduce_mean_8_keep_dims_0, x = square_2_cast)[name = tensor<string, []>("reduce_mean_8_cast")];
            tensor<fp16, []> add_4_y_0_to_fp16 = const()[name = tensor<string, []>("add_4_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_4_cast = add(x = reduce_mean_8_cast, y = add_4_y_0_to_fp16)[name = tensor<string, []>("add_4_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_2_cast = sqrt(x = add_4_cast)[name = tensor<string, []>("sqrt_2_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_2_cast = real_div(x = sub_4_cast, y = sqrt_2_cast)[name = tensor<string, []>("real_div_2_cast")];
            tensor<int32, [4]> reshape_9_shape_0 = const()[name = tensor<string, []>("reshape_9_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_9_cast = reshape(shape = reshape_9_shape_0, x = real_div_2_cast)[name = tensor<string, []>("reshape_9_cast")];
            tensor<fp16, [128]> add_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_5_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(599872)))];
            tensor<fp16, [128]> add_5_beta_0_to_fp16 = const()[name = tensor<string, []>("add_5_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(600192)))];
            tensor<fp16, []> add_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_5_cast = batch_norm(beta = add_5_beta_0_to_fp16, epsilon = add_5_epsilon_0_to_fp16, gamma = add_5_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_9_cast)[name = tensor<string, []>("add_5_cast")];
            tensor<fp16, [1, 128, 512, 512]> input_19_cast = silu(x = add_5_cast)[name = tensor<string, []>("input_19_cast")];
            tensor<int32, [2]> var_86 = const()[name = tensor<string, []>("op_86"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_88 = const()[name = tensor<string, []>("op_88"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(600512)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(895488)))];
            tensor<fp16, [1, 128, 512, 512]> input_21_cast = conv(bias = encoder_down_blocks_0_resnets_1_conv1_bias_to_fp16, dilations = var_88, groups = var_17, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_86, weight = encoder_down_blocks_0_resnets_1_conv1_weight_to_fp16, x = input_19_cast)[name = tensor<string, []>("input_21_cast")];
            tensor<int32, [5]> reshape_12_shape_0 = const()[name = tensor<string, []>("reshape_12_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 512, 512])];
            tensor<fp16, [1, 32, 4, 512, 512]> reshape_12_cast = reshape(shape = reshape_12_shape_0, x = input_21_cast)[name = tensor<string, []>("reshape_12_cast")];
            tensor<int32, [3]> reduce_mean_9_axes_0 = const()[name = tensor<string, []>("reduce_mean_9_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_9_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_9_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_9_cast = reduce_mean(axes = reduce_mean_9_axes_0, keep_dims = reduce_mean_9_keep_dims_0, x = reshape_12_cast)[name = tensor<string, []>("reduce_mean_9_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> sub_6_cast = sub(x = reshape_12_cast, y = reduce_mean_9_cast)[name = tensor<string, []>("sub_6_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> square_3_cast = square(x = sub_6_cast)[name = tensor<string, []>("square_3_cast")];
            tensor<int32, [3]> reduce_mean_11_axes_0 = const()[name = tensor<string, []>("reduce_mean_11_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_11_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_11_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_11_cast = reduce_mean(axes = reduce_mean_11_axes_0, keep_dims = reduce_mean_11_keep_dims_0, x = square_3_cast)[name = tensor<string, []>("reduce_mean_11_cast")];
            tensor<fp16, []> add_6_y_0_to_fp16 = const()[name = tensor<string, []>("add_6_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_6_cast = add(x = reduce_mean_11_cast, y = add_6_y_0_to_fp16)[name = tensor<string, []>("add_6_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_3_cast = sqrt(x = add_6_cast)[name = tensor<string, []>("sqrt_3_cast")];
            tensor<fp16, [1, 32, 4, 512, 512]> real_div_3_cast = real_div(x = sub_6_cast, y = sqrt_3_cast)[name = tensor<string, []>("real_div_3_cast")];
            tensor<int32, [4]> reshape_13_shape_0 = const()[name = tensor<string, []>("reshape_13_shape_0"), val = tensor<int32, [4]>([1, 128, 512, 512])];
            tensor<fp16, [1, 128, 512, 512]> reshape_13_cast = reshape(shape = reshape_13_shape_0, x = real_div_3_cast)[name = tensor<string, []>("reshape_13_cast")];
            tensor<fp16, [128]> add_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_7_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(895808)))];
            tensor<fp16, [128]> add_7_beta_0_to_fp16 = const()[name = tensor<string, []>("add_7_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(896128)))];
            tensor<fp16, []> add_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 512, 512]> add_7_cast = batch_norm(beta = add_7_beta_0_to_fp16, epsilon = add_7_epsilon_0_to_fp16, gamma = add_7_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_13_cast)[name = tensor<string, []>("add_7_cast")];
            tensor<fp16, [1, 128, 512, 512]> input_25_cast = silu(x = add_7_cast)[name = tensor<string, []>("input_25_cast")];
            tensor<int32, [2]> var_98 = const()[name = tensor<string, []>("op_98"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_100 = const()[name = tensor<string, []>("op_100"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_3_pad_type_0 = const()[name = tensor<string, []>("hidden_states_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_3_pad_0 = const()[name = tensor<string, []>("hidden_states_3_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(896448)))];
            tensor<fp16, [128]> encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1191424)))];
            tensor<fp16, [1, 128, 512, 512]> hidden_states_3_cast = conv(bias = encoder_down_blocks_0_resnets_1_conv2_bias_to_fp16, dilations = var_100, groups = var_17, pad = hidden_states_3_pad_0, pad_type = hidden_states_3_pad_type_0, strides = var_98, weight = encoder_down_blocks_0_resnets_1_conv2_weight_to_fp16, x = input_25_cast)[name = tensor<string, []>("hidden_states_3_cast")];
            tensor<fp16, [1, 128, 512, 512]> var_103_cast = add(x = var_73_cast, y = hidden_states_3_cast)[name = tensor<string, []>("op_103_cast")];
            tensor<int32, [8]> hidden_states_7_pad_0 = const()[name = tensor<string, []>("hidden_states_7_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_7_mode_0 = const()[name = tensor<string, []>("hidden_states_7_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_7_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_7_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 128, 513, 513]> hidden_states_7_cast = pad(constant_val = hidden_states_7_constant_val_0_to_fp16, mode = hidden_states_7_mode_0, pad = hidden_states_7_pad_0, x = var_103_cast)[name = tensor<string, []>("hidden_states_7_cast")];
            tensor<int32, [2]> var_111 = const()[name = tensor<string, []>("op_111"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_113 = const()[name = tensor<string, []>("op_113"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 3, 3]> encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1191744)))];
            tensor<fp16, [128]> encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1486720)))];
            tensor<fp16, [1, 128, 256, 256]> input_29_cast = conv(bias = encoder_down_blocks_0_downsamplers_0_conv_bias_to_fp16, dilations = var_113, groups = var_17, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_111, weight = encoder_down_blocks_0_downsamplers_0_conv_weight_to_fp16, x = hidden_states_7_cast)[name = tensor<string, []>("input_29_cast")];
            tensor<int32, [5]> reshape_16_shape_0 = const()[name = tensor<string, []>("reshape_16_shape_0"), val = tensor<int32, [5]>([1, 32, 4, 256, 256])];
            tensor<fp16, [1, 32, 4, 256, 256]> reshape_16_cast = reshape(shape = reshape_16_shape_0, x = input_29_cast)[name = tensor<string, []>("reshape_16_cast")];
            tensor<int32, [3]> reduce_mean_12_axes_0 = const()[name = tensor<string, []>("reduce_mean_12_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_12_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_12_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_12_cast = reduce_mean(axes = reduce_mean_12_axes_0, keep_dims = reduce_mean_12_keep_dims_0, x = reshape_16_cast)[name = tensor<string, []>("reduce_mean_12_cast")];
            tensor<fp16, [1, 32, 4, 256, 256]> sub_8_cast = sub(x = reshape_16_cast, y = reduce_mean_12_cast)[name = tensor<string, []>("sub_8_cast")];
            tensor<fp16, [1, 32, 4, 256, 256]> square_4_cast = square(x = sub_8_cast)[name = tensor<string, []>("square_4_cast")];
            tensor<int32, [3]> reduce_mean_14_axes_0 = const()[name = tensor<string, []>("reduce_mean_14_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_14_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_14_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_14_cast = reduce_mean(axes = reduce_mean_14_axes_0, keep_dims = reduce_mean_14_keep_dims_0, x = square_4_cast)[name = tensor<string, []>("reduce_mean_14_cast")];
            tensor<fp16, []> add_8_y_0_to_fp16 = const()[name = tensor<string, []>("add_8_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_8_cast = add(x = reduce_mean_14_cast, y = add_8_y_0_to_fp16)[name = tensor<string, []>("add_8_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_4_cast = sqrt(x = add_8_cast)[name = tensor<string, []>("sqrt_4_cast")];
            tensor<fp16, [1, 32, 4, 256, 256]> real_div_4_cast = real_div(x = sub_8_cast, y = sqrt_4_cast)[name = tensor<string, []>("real_div_4_cast")];
            tensor<int32, [4]> reshape_17_shape_0 = const()[name = tensor<string, []>("reshape_17_shape_0"), val = tensor<int32, [4]>([1, 128, 256, 256])];
            tensor<fp16, [1, 128, 256, 256]> reshape_17_cast = reshape(shape = reshape_17_shape_0, x = real_div_4_cast)[name = tensor<string, []>("reshape_17_cast")];
            tensor<fp16, [128]> add_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_9_gamma_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1487040)))];
            tensor<fp16, [128]> add_9_beta_0_to_fp16 = const()[name = tensor<string, []>("add_9_beta_0_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1487360)))];
            tensor<fp16, []> add_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 128, 256, 256]> add_9_cast = batch_norm(beta = add_9_beta_0_to_fp16, epsilon = add_9_epsilon_0_to_fp16, gamma = add_9_gamma_0_to_fp16, mean = add_1_mean_0_to_fp16, variance = add_1_variance_0_to_fp16, x = reshape_17_cast)[name = tensor<string, []>("add_9_cast")];
            tensor<fp16, [1, 128, 256, 256]> input_33_cast = silu(x = add_9_cast)[name = tensor<string, []>("input_33_cast")];
            tensor<int32, [2]> var_133 = const()[name = tensor<string, []>("op_133"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_135 = const()[name = tensor<string, []>("op_135"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_35_pad_type_0 = const()[name = tensor<string, []>("input_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_35_pad_0 = const()[name = tensor<string, []>("input_35_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1487680)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2077568)))];
            tensor<fp16, [1, 256, 256, 256]> input_35_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv1_bias_to_fp16, dilations = var_135, groups = var_17, pad = input_35_pad_0, pad_type = input_35_pad_type_0, strides = var_133, weight = encoder_down_blocks_1_resnets_0_conv1_weight_to_fp16, x = input_33_cast)[name = tensor<string, []>("input_35_cast")];
            tensor<int32, [5]> reshape_20_shape_0 = const()[name = tensor<string, []>("reshape_20_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_20_cast = reshape(shape = reshape_20_shape_0, x = input_35_cast)[name = tensor<string, []>("reshape_20_cast")];
            tensor<int32, [3]> reduce_mean_15_axes_0 = const()[name = tensor<string, []>("reduce_mean_15_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_15_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_15_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_15_cast = reduce_mean(axes = reduce_mean_15_axes_0, keep_dims = reduce_mean_15_keep_dims_0, x = reshape_20_cast)[name = tensor<string, []>("reduce_mean_15_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> sub_10_cast = sub(x = reshape_20_cast, y = reduce_mean_15_cast)[name = tensor<string, []>("sub_10_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> square_5_cast = square(x = sub_10_cast)[name = tensor<string, []>("square_5_cast")];
            tensor<int32, [3]> reduce_mean_17_axes_0 = const()[name = tensor<string, []>("reduce_mean_17_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_17_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_17_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_17_cast = reduce_mean(axes = reduce_mean_17_axes_0, keep_dims = reduce_mean_17_keep_dims_0, x = square_5_cast)[name = tensor<string, []>("reduce_mean_17_cast")];
            tensor<fp16, []> add_10_y_0_to_fp16 = const()[name = tensor<string, []>("add_10_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_10_cast = add(x = reduce_mean_17_cast, y = add_10_y_0_to_fp16)[name = tensor<string, []>("add_10_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_5_cast = sqrt(x = add_10_cast)[name = tensor<string, []>("sqrt_5_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_5_cast = real_div(x = sub_10_cast, y = sqrt_5_cast)[name = tensor<string, []>("real_div_5_cast")];
            tensor<int32, [4]> reshape_21_shape_0 = const()[name = tensor<string, []>("reshape_21_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_21_cast = reshape(shape = reshape_21_shape_0, x = real_div_5_cast)[name = tensor<string, []>("reshape_21_cast")];
            tensor<fp16, [256]> add_11_mean_0_to_fp16 = const()[name = tensor<string, []>("add_11_mean_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2078144)))];
            tensor<fp16, [256]> add_11_variance_0_to_fp16 = const()[name = tensor<string, []>("add_11_variance_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2078720)))];
            tensor<fp16, [256]> add_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_11_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2079296)))];
            tensor<fp16, [256]> add_11_beta_0_to_fp16 = const()[name = tensor<string, []>("add_11_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2079872)))];
            tensor<fp16, []> add_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_11_cast = batch_norm(beta = add_11_beta_0_to_fp16, epsilon = add_11_epsilon_0_to_fp16, gamma = add_11_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_21_cast)[name = tensor<string, []>("add_11_cast")];
            tensor<fp16, [1, 256, 256, 256]> input_39_cast = silu(x = add_11_cast)[name = tensor<string, []>("input_39_cast")];
            tensor<int32, [2]> var_145 = const()[name = tensor<string, []>("op_145"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_147 = const()[name = tensor<string, []>("op_147"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_9_pad_type_0 = const()[name = tensor<string, []>("hidden_states_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_9_pad_0 = const()[name = tensor<string, []>("hidden_states_9_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2080448)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3260160)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_9_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv2_bias_to_fp16, dilations = var_147, groups = var_17, pad = hidden_states_9_pad_0, pad_type = hidden_states_9_pad_type_0, strides = var_145, weight = encoder_down_blocks_1_resnets_0_conv2_weight_to_fp16, x = input_39_cast)[name = tensor<string, []>("hidden_states_9_cast")];
            tensor<int32, [2]> var_152 = const()[name = tensor<string, []>("op_152"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_154 = const()[name = tensor<string, []>("op_154"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_1_pad_type_0 = const()[name = tensor<string, []>("input_tensor_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_1_pad_0 = const()[name = tensor<string, []>("input_tensor_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 128, 1, 1]> encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [256, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3260736)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3326336)))];
            tensor<fp16, [1, 256, 256, 256]> input_tensor_1_cast = conv(bias = encoder_down_blocks_1_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_154, groups = var_17, pad = input_tensor_1_pad_0, pad_type = input_tensor_1_pad_type_0, strides = var_152, weight = encoder_down_blocks_1_resnets_0_conv_shortcut_weight_to_fp16, x = input_29_cast)[name = tensor<string, []>("input_tensor_1_cast")];
            tensor<fp16, [1, 256, 256, 256]> var_157_cast = add(x = input_tensor_1_cast, y = hidden_states_9_cast)[name = tensor<string, []>("op_157_cast")];
            tensor<int32, [5]> reshape_24_shape_0 = const()[name = tensor<string, []>("reshape_24_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_24_cast = reshape(shape = reshape_24_shape_0, x = var_157_cast)[name = tensor<string, []>("reshape_24_cast")];
            tensor<int32, [3]> reduce_mean_18_axes_0 = const()[name = tensor<string, []>("reduce_mean_18_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_18_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_18_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_18_cast = reduce_mean(axes = reduce_mean_18_axes_0, keep_dims = reduce_mean_18_keep_dims_0, x = reshape_24_cast)[name = tensor<string, []>("reduce_mean_18_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> sub_12_cast = sub(x = reshape_24_cast, y = reduce_mean_18_cast)[name = tensor<string, []>("sub_12_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> square_6_cast = square(x = sub_12_cast)[name = tensor<string, []>("square_6_cast")];
            tensor<int32, [3]> reduce_mean_20_axes_0 = const()[name = tensor<string, []>("reduce_mean_20_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_20_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_20_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_20_cast = reduce_mean(axes = reduce_mean_20_axes_0, keep_dims = reduce_mean_20_keep_dims_0, x = square_6_cast)[name = tensor<string, []>("reduce_mean_20_cast")];
            tensor<fp16, []> add_12_y_0_to_fp16 = const()[name = tensor<string, []>("add_12_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_12_cast = add(x = reduce_mean_20_cast, y = add_12_y_0_to_fp16)[name = tensor<string, []>("add_12_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_6_cast = sqrt(x = add_12_cast)[name = tensor<string, []>("sqrt_6_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_6_cast = real_div(x = sub_12_cast, y = sqrt_6_cast)[name = tensor<string, []>("real_div_6_cast")];
            tensor<int32, [4]> reshape_25_shape_0 = const()[name = tensor<string, []>("reshape_25_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_25_cast = reshape(shape = reshape_25_shape_0, x = real_div_6_cast)[name = tensor<string, []>("reshape_25_cast")];
            tensor<fp16, [256]> add_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_13_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3326912)))];
            tensor<fp16, [256]> add_13_beta_0_to_fp16 = const()[name = tensor<string, []>("add_13_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3327488)))];
            tensor<fp16, []> add_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_13_cast = batch_norm(beta = add_13_beta_0_to_fp16, epsilon = add_13_epsilon_0_to_fp16, gamma = add_13_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_25_cast)[name = tensor<string, []>("add_13_cast")];
            tensor<fp16, [1, 256, 256, 256]> input_47_cast = silu(x = add_13_cast)[name = tensor<string, []>("input_47_cast")];
            tensor<int32, [2]> var_170 = const()[name = tensor<string, []>("op_170"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_172 = const()[name = tensor<string, []>("op_172"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3328064)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4507776)))];
            tensor<fp16, [1, 256, 256, 256]> input_49_cast = conv(bias = encoder_down_blocks_1_resnets_1_conv1_bias_to_fp16, dilations = var_172, groups = var_17, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_170, weight = encoder_down_blocks_1_resnets_1_conv1_weight_to_fp16, x = input_47_cast)[name = tensor<string, []>("input_49_cast")];
            tensor<int32, [5]> reshape_28_shape_0 = const()[name = tensor<string, []>("reshape_28_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 256, 256])];
            tensor<fp16, [1, 32, 8, 256, 256]> reshape_28_cast = reshape(shape = reshape_28_shape_0, x = input_49_cast)[name = tensor<string, []>("reshape_28_cast")];
            tensor<int32, [3]> reduce_mean_21_axes_0 = const()[name = tensor<string, []>("reduce_mean_21_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_21_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_21_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_21_cast = reduce_mean(axes = reduce_mean_21_axes_0, keep_dims = reduce_mean_21_keep_dims_0, x = reshape_28_cast)[name = tensor<string, []>("reduce_mean_21_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> sub_14_cast = sub(x = reshape_28_cast, y = reduce_mean_21_cast)[name = tensor<string, []>("sub_14_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> square_7_cast = square(x = sub_14_cast)[name = tensor<string, []>("square_7_cast")];
            tensor<int32, [3]> reduce_mean_23_axes_0 = const()[name = tensor<string, []>("reduce_mean_23_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_23_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_23_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_23_cast = reduce_mean(axes = reduce_mean_23_axes_0, keep_dims = reduce_mean_23_keep_dims_0, x = square_7_cast)[name = tensor<string, []>("reduce_mean_23_cast")];
            tensor<fp16, []> add_14_y_0_to_fp16 = const()[name = tensor<string, []>("add_14_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_14_cast = add(x = reduce_mean_23_cast, y = add_14_y_0_to_fp16)[name = tensor<string, []>("add_14_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_7_cast = sqrt(x = add_14_cast)[name = tensor<string, []>("sqrt_7_cast")];
            tensor<fp16, [1, 32, 8, 256, 256]> real_div_7_cast = real_div(x = sub_14_cast, y = sqrt_7_cast)[name = tensor<string, []>("real_div_7_cast")];
            tensor<int32, [4]> reshape_29_shape_0 = const()[name = tensor<string, []>("reshape_29_shape_0"), val = tensor<int32, [4]>([1, 256, 256, 256])];
            tensor<fp16, [1, 256, 256, 256]> reshape_29_cast = reshape(shape = reshape_29_shape_0, x = real_div_7_cast)[name = tensor<string, []>("reshape_29_cast")];
            tensor<fp16, [256]> add_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_15_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4508352)))];
            tensor<fp16, [256]> add_15_beta_0_to_fp16 = const()[name = tensor<string, []>("add_15_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4508928)))];
            tensor<fp16, []> add_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 256, 256]> add_15_cast = batch_norm(beta = add_15_beta_0_to_fp16, epsilon = add_15_epsilon_0_to_fp16, gamma = add_15_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_29_cast)[name = tensor<string, []>("add_15_cast")];
            tensor<fp16, [1, 256, 256, 256]> input_53_cast = silu(x = add_15_cast)[name = tensor<string, []>("input_53_cast")];
            tensor<int32, [2]> var_182 = const()[name = tensor<string, []>("op_182"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_184 = const()[name = tensor<string, []>("op_184"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_11_pad_type_0 = const()[name = tensor<string, []>("hidden_states_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_11_pad_0 = const()[name = tensor<string, []>("hidden_states_11_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4509504)))];
            tensor<fp16, [256]> encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5689216)))];
            tensor<fp16, [1, 256, 256, 256]> hidden_states_11_cast = conv(bias = encoder_down_blocks_1_resnets_1_conv2_bias_to_fp16, dilations = var_184, groups = var_17, pad = hidden_states_11_pad_0, pad_type = hidden_states_11_pad_type_0, strides = var_182, weight = encoder_down_blocks_1_resnets_1_conv2_weight_to_fp16, x = input_53_cast)[name = tensor<string, []>("hidden_states_11_cast")];
            tensor<fp16, [1, 256, 256, 256]> var_187_cast = add(x = var_157_cast, y = hidden_states_11_cast)[name = tensor<string, []>("op_187_cast")];
            tensor<int32, [8]> hidden_states_15_pad_0 = const()[name = tensor<string, []>("hidden_states_15_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_15_mode_0 = const()[name = tensor<string, []>("hidden_states_15_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_15_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_15_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 256, 257, 257]> hidden_states_15_cast = pad(constant_val = hidden_states_15_constant_val_0_to_fp16, mode = hidden_states_15_mode_0, pad = hidden_states_15_pad_0, x = var_187_cast)[name = tensor<string, []>("hidden_states_15_cast")];
            tensor<int32, [2]> var_195 = const()[name = tensor<string, []>("op_195"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_197 = const()[name = tensor<string, []>("op_197"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 3, 3]> encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5689792)))];
            tensor<fp16, [256]> encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6869504)))];
            tensor<fp16, [1, 256, 128, 128]> input_57_cast = conv(bias = encoder_down_blocks_1_downsamplers_0_conv_bias_to_fp16, dilations = var_197, groups = var_17, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_195, weight = encoder_down_blocks_1_downsamplers_0_conv_weight_to_fp16, x = hidden_states_15_cast)[name = tensor<string, []>("input_57_cast")];
            tensor<int32, [5]> reshape_32_shape_0 = const()[name = tensor<string, []>("reshape_32_shape_0"), val = tensor<int32, [5]>([1, 32, 8, 128, 128])];
            tensor<fp16, [1, 32, 8, 128, 128]> reshape_32_cast = reshape(shape = reshape_32_shape_0, x = input_57_cast)[name = tensor<string, []>("reshape_32_cast")];
            tensor<int32, [3]> reduce_mean_24_axes_0 = const()[name = tensor<string, []>("reduce_mean_24_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_24_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_24_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_24_cast = reduce_mean(axes = reduce_mean_24_axes_0, keep_dims = reduce_mean_24_keep_dims_0, x = reshape_32_cast)[name = tensor<string, []>("reduce_mean_24_cast")];
            tensor<fp16, [1, 32, 8, 128, 128]> sub_16_cast = sub(x = reshape_32_cast, y = reduce_mean_24_cast)[name = tensor<string, []>("sub_16_cast")];
            tensor<fp16, [1, 32, 8, 128, 128]> square_8_cast = square(x = sub_16_cast)[name = tensor<string, []>("square_8_cast")];
            tensor<int32, [3]> reduce_mean_26_axes_0 = const()[name = tensor<string, []>("reduce_mean_26_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_26_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_26_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_26_cast = reduce_mean(axes = reduce_mean_26_axes_0, keep_dims = reduce_mean_26_keep_dims_0, x = square_8_cast)[name = tensor<string, []>("reduce_mean_26_cast")];
            tensor<fp16, []> add_16_y_0_to_fp16 = const()[name = tensor<string, []>("add_16_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_16_cast = add(x = reduce_mean_26_cast, y = add_16_y_0_to_fp16)[name = tensor<string, []>("add_16_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_8_cast = sqrt(x = add_16_cast)[name = tensor<string, []>("sqrt_8_cast")];
            tensor<fp16, [1, 32, 8, 128, 128]> real_div_8_cast = real_div(x = sub_16_cast, y = sqrt_8_cast)[name = tensor<string, []>("real_div_8_cast")];
            tensor<int32, [4]> reshape_33_shape_0 = const()[name = tensor<string, []>("reshape_33_shape_0"), val = tensor<int32, [4]>([1, 256, 128, 128])];
            tensor<fp16, [1, 256, 128, 128]> reshape_33_cast = reshape(shape = reshape_33_shape_0, x = real_div_8_cast)[name = tensor<string, []>("reshape_33_cast")];
            tensor<fp16, [256]> add_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_17_gamma_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6870080)))];
            tensor<fp16, [256]> add_17_beta_0_to_fp16 = const()[name = tensor<string, []>("add_17_beta_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6870656)))];
            tensor<fp16, []> add_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 256, 128, 128]> add_17_cast = batch_norm(beta = add_17_beta_0_to_fp16, epsilon = add_17_epsilon_0_to_fp16, gamma = add_17_gamma_0_to_fp16, mean = add_11_mean_0_to_fp16, variance = add_11_variance_0_to_fp16, x = reshape_33_cast)[name = tensor<string, []>("add_17_cast")];
            tensor<fp16, [1, 256, 128, 128]> input_61_cast = silu(x = add_17_cast)[name = tensor<string, []>("input_61_cast")];
            tensor<int32, [2]> var_217 = const()[name = tensor<string, []>("op_217"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_219 = const()[name = tensor<string, []>("op_219"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 256, 3, 3]> encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6871232)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9230592)))];
            tensor<fp16, [1, 512, 128, 128]> input_63_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv1_bias_to_fp16, dilations = var_219, groups = var_17, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_217, weight = encoder_down_blocks_2_resnets_0_conv1_weight_to_fp16, x = input_61_cast)[name = tensor<string, []>("input_63_cast")];
            tensor<int32, [5]> reshape_36_shape_0 = const()[name = tensor<string, []>("reshape_36_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_36_cast = reshape(shape = reshape_36_shape_0, x = input_63_cast)[name = tensor<string, []>("reshape_36_cast")];
            tensor<int32, [3]> reduce_mean_27_axes_0 = const()[name = tensor<string, []>("reduce_mean_27_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_27_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_27_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_27_cast = reduce_mean(axes = reduce_mean_27_axes_0, keep_dims = reduce_mean_27_keep_dims_0, x = reshape_36_cast)[name = tensor<string, []>("reduce_mean_27_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> sub_18_cast = sub(x = reshape_36_cast, y = reduce_mean_27_cast)[name = tensor<string, []>("sub_18_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> square_9_cast = square(x = sub_18_cast)[name = tensor<string, []>("square_9_cast")];
            tensor<int32, [3]> reduce_mean_29_axes_0 = const()[name = tensor<string, []>("reduce_mean_29_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_29_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_29_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_29_cast = reduce_mean(axes = reduce_mean_29_axes_0, keep_dims = reduce_mean_29_keep_dims_0, x = square_9_cast)[name = tensor<string, []>("reduce_mean_29_cast")];
            tensor<fp16, []> add_18_y_0_to_fp16 = const()[name = tensor<string, []>("add_18_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_18_cast = add(x = reduce_mean_29_cast, y = add_18_y_0_to_fp16)[name = tensor<string, []>("add_18_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_9_cast = sqrt(x = add_18_cast)[name = tensor<string, []>("sqrt_9_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_9_cast = real_div(x = sub_18_cast, y = sqrt_9_cast)[name = tensor<string, []>("real_div_9_cast")];
            tensor<int32, [4]> reshape_37_shape_0 = const()[name = tensor<string, []>("reshape_37_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_37_cast = reshape(shape = reshape_37_shape_0, x = real_div_9_cast)[name = tensor<string, []>("reshape_37_cast")];
            tensor<fp16, [512]> add_19_mean_0_to_fp16 = const()[name = tensor<string, []>("add_19_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9231680)))];
            tensor<fp16, [512]> add_19_variance_0_to_fp16 = const()[name = tensor<string, []>("add_19_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9232768)))];
            tensor<fp16, [512]> add_19_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_19_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9233856)))];
            tensor<fp16, [512]> add_19_beta_0_to_fp16 = const()[name = tensor<string, []>("add_19_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9234944)))];
            tensor<fp16, []> add_19_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_19_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_19_cast = batch_norm(beta = add_19_beta_0_to_fp16, epsilon = add_19_epsilon_0_to_fp16, gamma = add_19_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_37_cast)[name = tensor<string, []>("add_19_cast")];
            tensor<fp16, [1, 512, 128, 128]> input_67_cast = silu(x = add_19_cast)[name = tensor<string, []>("input_67_cast")];
            tensor<int32, [2]> var_229 = const()[name = tensor<string, []>("op_229"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_231 = const()[name = tensor<string, []>("op_231"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_17_pad_type_0 = const()[name = tensor<string, []>("hidden_states_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_17_pad_0 = const()[name = tensor<string, []>("hidden_states_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9236032)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13954688)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_17_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv2_bias_to_fp16, dilations = var_231, groups = var_17, pad = hidden_states_17_pad_0, pad_type = hidden_states_17_pad_type_0, strides = var_229, weight = encoder_down_blocks_2_resnets_0_conv2_weight_to_fp16, x = input_67_cast)[name = tensor<string, []>("hidden_states_17_cast")];
            tensor<int32, [2]> var_236 = const()[name = tensor<string, []>("op_236"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_238 = const()[name = tensor<string, []>("op_238"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_tensor_pad_type_0 = const()[name = tensor<string, []>("input_tensor_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_tensor_pad_0 = const()[name = tensor<string, []>("input_tensor_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 256, 1, 1]> encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16"), val = tensor<fp16, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13955776)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14217984)))];
            tensor<fp16, [1, 512, 128, 128]> input_tensor_cast = conv(bias = encoder_down_blocks_2_resnets_0_conv_shortcut_bias_to_fp16, dilations = var_238, groups = var_17, pad = input_tensor_pad_0, pad_type = input_tensor_pad_type_0, strides = var_236, weight = encoder_down_blocks_2_resnets_0_conv_shortcut_weight_to_fp16, x = input_57_cast)[name = tensor<string, []>("input_tensor_cast")];
            tensor<fp16, [1, 512, 128, 128]> var_241_cast = add(x = input_tensor_cast, y = hidden_states_17_cast)[name = tensor<string, []>("op_241_cast")];
            tensor<int32, [5]> reshape_40_shape_0 = const()[name = tensor<string, []>("reshape_40_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_40_cast = reshape(shape = reshape_40_shape_0, x = var_241_cast)[name = tensor<string, []>("reshape_40_cast")];
            tensor<int32, [3]> reduce_mean_30_axes_0 = const()[name = tensor<string, []>("reduce_mean_30_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_30_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_30_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_30_cast = reduce_mean(axes = reduce_mean_30_axes_0, keep_dims = reduce_mean_30_keep_dims_0, x = reshape_40_cast)[name = tensor<string, []>("reduce_mean_30_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> sub_20_cast = sub(x = reshape_40_cast, y = reduce_mean_30_cast)[name = tensor<string, []>("sub_20_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> square_10_cast = square(x = sub_20_cast)[name = tensor<string, []>("square_10_cast")];
            tensor<int32, [3]> reduce_mean_32_axes_0 = const()[name = tensor<string, []>("reduce_mean_32_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_32_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_32_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_32_cast = reduce_mean(axes = reduce_mean_32_axes_0, keep_dims = reduce_mean_32_keep_dims_0, x = square_10_cast)[name = tensor<string, []>("reduce_mean_32_cast")];
            tensor<fp16, []> add_20_y_0_to_fp16 = const()[name = tensor<string, []>("add_20_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_20_cast = add(x = reduce_mean_32_cast, y = add_20_y_0_to_fp16)[name = tensor<string, []>("add_20_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_10_cast = sqrt(x = add_20_cast)[name = tensor<string, []>("sqrt_10_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_10_cast = real_div(x = sub_20_cast, y = sqrt_10_cast)[name = tensor<string, []>("real_div_10_cast")];
            tensor<int32, [4]> reshape_41_shape_0 = const()[name = tensor<string, []>("reshape_41_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_41_cast = reshape(shape = reshape_41_shape_0, x = real_div_10_cast)[name = tensor<string, []>("reshape_41_cast")];
            tensor<fp16, [512]> add_21_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_21_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14219072)))];
            tensor<fp16, [512]> add_21_beta_0_to_fp16 = const()[name = tensor<string, []>("add_21_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14220160)))];
            tensor<fp16, []> add_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_21_cast = batch_norm(beta = add_21_beta_0_to_fp16, epsilon = add_21_epsilon_0_to_fp16, gamma = add_21_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_41_cast)[name = tensor<string, []>("add_21_cast")];
            tensor<fp16, [1, 512, 128, 128]> input_75_cast = silu(x = add_21_cast)[name = tensor<string, []>("input_75_cast")];
            tensor<int32, [2]> var_254 = const()[name = tensor<string, []>("op_254"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_256 = const()[name = tensor<string, []>("op_256"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(14221248)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18939904)))];
            tensor<fp16, [1, 512, 128, 128]> input_77_cast = conv(bias = encoder_down_blocks_2_resnets_1_conv1_bias_to_fp16, dilations = var_256, groups = var_17, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_254, weight = encoder_down_blocks_2_resnets_1_conv1_weight_to_fp16, x = input_75_cast)[name = tensor<string, []>("input_77_cast")];
            tensor<int32, [5]> reshape_44_shape_0 = const()[name = tensor<string, []>("reshape_44_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 128, 128])];
            tensor<fp16, [1, 32, 16, 128, 128]> reshape_44_cast = reshape(shape = reshape_44_shape_0, x = input_77_cast)[name = tensor<string, []>("reshape_44_cast")];
            tensor<int32, [3]> reduce_mean_33_axes_0 = const()[name = tensor<string, []>("reduce_mean_33_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_33_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_33_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_33_cast = reduce_mean(axes = reduce_mean_33_axes_0, keep_dims = reduce_mean_33_keep_dims_0, x = reshape_44_cast)[name = tensor<string, []>("reduce_mean_33_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> sub_22_cast = sub(x = reshape_44_cast, y = reduce_mean_33_cast)[name = tensor<string, []>("sub_22_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> square_11_cast = square(x = sub_22_cast)[name = tensor<string, []>("square_11_cast")];
            tensor<int32, [3]> reduce_mean_35_axes_0 = const()[name = tensor<string, []>("reduce_mean_35_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_35_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_35_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_35_cast = reduce_mean(axes = reduce_mean_35_axes_0, keep_dims = reduce_mean_35_keep_dims_0, x = square_11_cast)[name = tensor<string, []>("reduce_mean_35_cast")];
            tensor<fp16, []> add_22_y_0_to_fp16 = const()[name = tensor<string, []>("add_22_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_22_cast = add(x = reduce_mean_35_cast, y = add_22_y_0_to_fp16)[name = tensor<string, []>("add_22_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_11_cast = sqrt(x = add_22_cast)[name = tensor<string, []>("sqrt_11_cast")];
            tensor<fp16, [1, 32, 16, 128, 128]> real_div_11_cast = real_div(x = sub_22_cast, y = sqrt_11_cast)[name = tensor<string, []>("real_div_11_cast")];
            tensor<int32, [4]> reshape_45_shape_0 = const()[name = tensor<string, []>("reshape_45_shape_0"), val = tensor<int32, [4]>([1, 512, 128, 128])];
            tensor<fp16, [1, 512, 128, 128]> reshape_45_cast = reshape(shape = reshape_45_shape_0, x = real_div_11_cast)[name = tensor<string, []>("reshape_45_cast")];
            tensor<fp16, [512]> add_23_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_23_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18940992)))];
            tensor<fp16, [512]> add_23_beta_0_to_fp16 = const()[name = tensor<string, []>("add_23_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18942080)))];
            tensor<fp16, []> add_23_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_23_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 128, 128]> add_23_cast = batch_norm(beta = add_23_beta_0_to_fp16, epsilon = add_23_epsilon_0_to_fp16, gamma = add_23_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_45_cast)[name = tensor<string, []>("add_23_cast")];
            tensor<fp16, [1, 512, 128, 128]> input_81_cast = silu(x = add_23_cast)[name = tensor<string, []>("input_81_cast")];
            tensor<int32, [2]> var_266 = const()[name = tensor<string, []>("op_266"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_268 = const()[name = tensor<string, []>("op_268"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_19_pad_type_0 = const()[name = tensor<string, []>("hidden_states_19_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_19_pad_0 = const()[name = tensor<string, []>("hidden_states_19_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18943168)))];
            tensor<fp16, [512]> encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23661824)))];
            tensor<fp16, [1, 512, 128, 128]> hidden_states_19_cast = conv(bias = encoder_down_blocks_2_resnets_1_conv2_bias_to_fp16, dilations = var_268, groups = var_17, pad = hidden_states_19_pad_0, pad_type = hidden_states_19_pad_type_0, strides = var_266, weight = encoder_down_blocks_2_resnets_1_conv2_weight_to_fp16, x = input_81_cast)[name = tensor<string, []>("hidden_states_19_cast")];
            tensor<fp16, [1, 512, 128, 128]> var_271_cast = add(x = var_241_cast, y = hidden_states_19_cast)[name = tensor<string, []>("op_271_cast")];
            tensor<int32, [8]> hidden_states_23_pad_0 = const()[name = tensor<string, []>("hidden_states_23_pad_0"), val = tensor<int32, [8]>([0, 0, 0, 0, 0, 1, 0, 1])];
            tensor<string, []> hidden_states_23_mode_0 = const()[name = tensor<string, []>("hidden_states_23_mode_0"), val = tensor<string, []>("constant")];
            tensor<fp16, []> hidden_states_23_constant_val_0_to_fp16 = const()[name = tensor<string, []>("hidden_states_23_constant_val_0_to_fp16"), val = tensor<fp16, []>(0x0p+0)];
            tensor<fp16, [1, 512, 129, 129]> hidden_states_23_cast = pad(constant_val = hidden_states_23_constant_val_0_to_fp16, mode = hidden_states_23_mode_0, pad = hidden_states_23_pad_0, x = var_271_cast)[name = tensor<string, []>("hidden_states_23_cast")];
            tensor<int32, [2]> var_279 = const()[name = tensor<string, []>("op_279"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_281 = const()[name = tensor<string, []>("op_281"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23662912)))];
            tensor<fp16, [512]> encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28381568)))];
            tensor<fp16, [1, 512, 64, 64]> input_85_cast = conv(bias = encoder_down_blocks_2_downsamplers_0_conv_bias_to_fp16, dilations = var_281, groups = var_17, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_279, weight = encoder_down_blocks_2_downsamplers_0_conv_weight_to_fp16, x = hidden_states_23_cast)[name = tensor<string, []>("input_85_cast")];
            tensor<int32, [5]> reshape_48_shape_0 = const()[name = tensor<string, []>("reshape_48_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_48_cast = reshape(shape = reshape_48_shape_0, x = input_85_cast)[name = tensor<string, []>("reshape_48_cast")];
            tensor<int32, [3]> reduce_mean_36_axes_0 = const()[name = tensor<string, []>("reduce_mean_36_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_36_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_36_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_36_cast = reduce_mean(axes = reduce_mean_36_axes_0, keep_dims = reduce_mean_36_keep_dims_0, x = reshape_48_cast)[name = tensor<string, []>("reduce_mean_36_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_24_cast = sub(x = reshape_48_cast, y = reduce_mean_36_cast)[name = tensor<string, []>("sub_24_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_12_cast = square(x = sub_24_cast)[name = tensor<string, []>("square_12_cast")];
            tensor<int32, [3]> reduce_mean_38_axes_0 = const()[name = tensor<string, []>("reduce_mean_38_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_38_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_38_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_38_cast = reduce_mean(axes = reduce_mean_38_axes_0, keep_dims = reduce_mean_38_keep_dims_0, x = square_12_cast)[name = tensor<string, []>("reduce_mean_38_cast")];
            tensor<fp16, []> add_24_y_0_to_fp16 = const()[name = tensor<string, []>("add_24_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_24_cast = add(x = reduce_mean_38_cast, y = add_24_y_0_to_fp16)[name = tensor<string, []>("add_24_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_12_cast = sqrt(x = add_24_cast)[name = tensor<string, []>("sqrt_12_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_12_cast = real_div(x = sub_24_cast, y = sqrt_12_cast)[name = tensor<string, []>("real_div_12_cast")];
            tensor<int32, [4]> reshape_49_shape_0 = const()[name = tensor<string, []>("reshape_49_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_49_cast = reshape(shape = reshape_49_shape_0, x = real_div_12_cast)[name = tensor<string, []>("reshape_49_cast")];
            tensor<fp16, [512]> add_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_25_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28382656)))];
            tensor<fp16, [512]> add_25_beta_0_to_fp16 = const()[name = tensor<string, []>("add_25_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28383744)))];
            tensor<fp16, []> add_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_25_cast = batch_norm(beta = add_25_beta_0_to_fp16, epsilon = add_25_epsilon_0_to_fp16, gamma = add_25_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_49_cast)[name = tensor<string, []>("add_25_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_89_cast = silu(x = add_25_cast)[name = tensor<string, []>("input_89_cast")];
            tensor<int32, [2]> var_298 = const()[name = tensor<string, []>("op_298"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_300 = const()[name = tensor<string, []>("op_300"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_91_pad_type_0 = const()[name = tensor<string, []>("input_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_91_pad_0 = const()[name = tensor<string, []>("input_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28384832)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33103488)))];
            tensor<fp16, [1, 512, 64, 64]> input_91_cast = conv(bias = encoder_down_blocks_3_resnets_0_conv1_bias_to_fp16, dilations = var_300, groups = var_17, pad = input_91_pad_0, pad_type = input_91_pad_type_0, strides = var_298, weight = encoder_down_blocks_3_resnets_0_conv1_weight_to_fp16, x = input_89_cast)[name = tensor<string, []>("input_91_cast")];
            tensor<int32, [5]> reshape_52_shape_0 = const()[name = tensor<string, []>("reshape_52_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_52_cast = reshape(shape = reshape_52_shape_0, x = input_91_cast)[name = tensor<string, []>("reshape_52_cast")];
            tensor<int32, [3]> reduce_mean_39_axes_0 = const()[name = tensor<string, []>("reduce_mean_39_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_39_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_39_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_39_cast = reduce_mean(axes = reduce_mean_39_axes_0, keep_dims = reduce_mean_39_keep_dims_0, x = reshape_52_cast)[name = tensor<string, []>("reduce_mean_39_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_26_cast = sub(x = reshape_52_cast, y = reduce_mean_39_cast)[name = tensor<string, []>("sub_26_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_13_cast = square(x = sub_26_cast)[name = tensor<string, []>("square_13_cast")];
            tensor<int32, [3]> reduce_mean_41_axes_0 = const()[name = tensor<string, []>("reduce_mean_41_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_41_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_41_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_41_cast = reduce_mean(axes = reduce_mean_41_axes_0, keep_dims = reduce_mean_41_keep_dims_0, x = square_13_cast)[name = tensor<string, []>("reduce_mean_41_cast")];
            tensor<fp16, []> add_26_y_0_to_fp16 = const()[name = tensor<string, []>("add_26_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_26_cast = add(x = reduce_mean_41_cast, y = add_26_y_0_to_fp16)[name = tensor<string, []>("add_26_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_13_cast = sqrt(x = add_26_cast)[name = tensor<string, []>("sqrt_13_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_13_cast = real_div(x = sub_26_cast, y = sqrt_13_cast)[name = tensor<string, []>("real_div_13_cast")];
            tensor<int32, [4]> reshape_53_shape_0 = const()[name = tensor<string, []>("reshape_53_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_53_cast = reshape(shape = reshape_53_shape_0, x = real_div_13_cast)[name = tensor<string, []>("reshape_53_cast")];
            tensor<fp16, [512]> add_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_27_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33104576)))];
            tensor<fp16, [512]> add_27_beta_0_to_fp16 = const()[name = tensor<string, []>("add_27_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33105664)))];
            tensor<fp16, []> add_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_27_cast = batch_norm(beta = add_27_beta_0_to_fp16, epsilon = add_27_epsilon_0_to_fp16, gamma = add_27_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_53_cast)[name = tensor<string, []>("add_27_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_95_cast = silu(x = add_27_cast)[name = tensor<string, []>("input_95_cast")];
            tensor<int32, [2]> var_310 = const()[name = tensor<string, []>("op_310"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_312 = const()[name = tensor<string, []>("op_312"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_25_pad_type_0 = const()[name = tensor<string, []>("hidden_states_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_25_pad_0 = const()[name = tensor<string, []>("hidden_states_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33106752)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37825408)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_25_cast = conv(bias = encoder_down_blocks_3_resnets_0_conv2_bias_to_fp16, dilations = var_312, groups = var_17, pad = hidden_states_25_pad_0, pad_type = hidden_states_25_pad_type_0, strides = var_310, weight = encoder_down_blocks_3_resnets_0_conv2_weight_to_fp16, x = input_95_cast)[name = tensor<string, []>("hidden_states_25_cast")];
            tensor<fp16, [1, 512, 64, 64]> var_315_cast = add(x = input_85_cast, y = hidden_states_25_cast)[name = tensor<string, []>("op_315_cast")];
            tensor<int32, [5]> reshape_56_shape_0 = const()[name = tensor<string, []>("reshape_56_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_56_cast = reshape(shape = reshape_56_shape_0, x = var_315_cast)[name = tensor<string, []>("reshape_56_cast")];
            tensor<int32, [3]> reduce_mean_42_axes_0 = const()[name = tensor<string, []>("reduce_mean_42_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_42_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_42_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_42_cast = reduce_mean(axes = reduce_mean_42_axes_0, keep_dims = reduce_mean_42_keep_dims_0, x = reshape_56_cast)[name = tensor<string, []>("reduce_mean_42_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_28_cast = sub(x = reshape_56_cast, y = reduce_mean_42_cast)[name = tensor<string, []>("sub_28_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_14_cast = square(x = sub_28_cast)[name = tensor<string, []>("square_14_cast")];
            tensor<int32, [3]> reduce_mean_44_axes_0 = const()[name = tensor<string, []>("reduce_mean_44_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_44_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_44_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_44_cast = reduce_mean(axes = reduce_mean_44_axes_0, keep_dims = reduce_mean_44_keep_dims_0, x = square_14_cast)[name = tensor<string, []>("reduce_mean_44_cast")];
            tensor<fp16, []> add_28_y_0_to_fp16 = const()[name = tensor<string, []>("add_28_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_28_cast = add(x = reduce_mean_44_cast, y = add_28_y_0_to_fp16)[name = tensor<string, []>("add_28_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_14_cast = sqrt(x = add_28_cast)[name = tensor<string, []>("sqrt_14_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_14_cast = real_div(x = sub_28_cast, y = sqrt_14_cast)[name = tensor<string, []>("real_div_14_cast")];
            tensor<int32, [4]> reshape_57_shape_0 = const()[name = tensor<string, []>("reshape_57_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_57_cast = reshape(shape = reshape_57_shape_0, x = real_div_14_cast)[name = tensor<string, []>("reshape_57_cast")];
            tensor<fp16, [512]> add_29_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_29_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37826496)))];
            tensor<fp16, [512]> add_29_beta_0_to_fp16 = const()[name = tensor<string, []>("add_29_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37827584)))];
            tensor<fp16, []> add_29_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_29_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_29_cast = batch_norm(beta = add_29_beta_0_to_fp16, epsilon = add_29_epsilon_0_to_fp16, gamma = add_29_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_57_cast)[name = tensor<string, []>("add_29_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_103_cast = silu(x = add_29_cast)[name = tensor<string, []>("input_103_cast")];
            tensor<int32, [2]> var_328 = const()[name = tensor<string, []>("op_328"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_330 = const()[name = tensor<string, []>("op_330"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37828672)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42547328)))];
            tensor<fp16, [1, 512, 64, 64]> input_105_cast = conv(bias = encoder_down_blocks_3_resnets_1_conv1_bias_to_fp16, dilations = var_330, groups = var_17, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_328, weight = encoder_down_blocks_3_resnets_1_conv1_weight_to_fp16, x = input_103_cast)[name = tensor<string, []>("input_105_cast")];
            tensor<int32, [5]> reshape_60_shape_0 = const()[name = tensor<string, []>("reshape_60_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_60_cast = reshape(shape = reshape_60_shape_0, x = input_105_cast)[name = tensor<string, []>("reshape_60_cast")];
            tensor<int32, [3]> reduce_mean_45_axes_0 = const()[name = tensor<string, []>("reduce_mean_45_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_45_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_45_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_45_cast = reduce_mean(axes = reduce_mean_45_axes_0, keep_dims = reduce_mean_45_keep_dims_0, x = reshape_60_cast)[name = tensor<string, []>("reduce_mean_45_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_30_cast = sub(x = reshape_60_cast, y = reduce_mean_45_cast)[name = tensor<string, []>("sub_30_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_15_cast = square(x = sub_30_cast)[name = tensor<string, []>("square_15_cast")];
            tensor<int32, [3]> reduce_mean_47_axes_0 = const()[name = tensor<string, []>("reduce_mean_47_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_47_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_47_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_47_cast = reduce_mean(axes = reduce_mean_47_axes_0, keep_dims = reduce_mean_47_keep_dims_0, x = square_15_cast)[name = tensor<string, []>("reduce_mean_47_cast")];
            tensor<fp16, []> add_30_y_0_to_fp16 = const()[name = tensor<string, []>("add_30_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_30_cast = add(x = reduce_mean_47_cast, y = add_30_y_0_to_fp16)[name = tensor<string, []>("add_30_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_15_cast = sqrt(x = add_30_cast)[name = tensor<string, []>("sqrt_15_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_15_cast = real_div(x = sub_30_cast, y = sqrt_15_cast)[name = tensor<string, []>("real_div_15_cast")];
            tensor<int32, [4]> reshape_61_shape_0 = const()[name = tensor<string, []>("reshape_61_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_61_cast = reshape(shape = reshape_61_shape_0, x = real_div_15_cast)[name = tensor<string, []>("reshape_61_cast")];
            tensor<fp16, [512]> add_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_31_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42548416)))];
            tensor<fp16, [512]> add_31_beta_0_to_fp16 = const()[name = tensor<string, []>("add_31_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42549504)))];
            tensor<fp16, []> add_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_31_cast = batch_norm(beta = add_31_beta_0_to_fp16, epsilon = add_31_epsilon_0_to_fp16, gamma = add_31_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_61_cast)[name = tensor<string, []>("add_31_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_109_cast = silu(x = add_31_cast)[name = tensor<string, []>("input_109_cast")];
            tensor<int32, [2]> var_340 = const()[name = tensor<string, []>("op_340"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_342 = const()[name = tensor<string, []>("op_342"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_27_pad_type_0 = const()[name = tensor<string, []>("hidden_states_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_27_pad_0 = const()[name = tensor<string, []>("hidden_states_27_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42550592)))];
            tensor<fp16, [512]> encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47269248)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_27_cast = conv(bias = encoder_down_blocks_3_resnets_1_conv2_bias_to_fp16, dilations = var_342, groups = var_17, pad = hidden_states_27_pad_0, pad_type = hidden_states_27_pad_type_0, strides = var_340, weight = encoder_down_blocks_3_resnets_1_conv2_weight_to_fp16, x = input_109_cast)[name = tensor<string, []>("hidden_states_27_cast")];
            tensor<fp16, [1, 512, 64, 64]> var_345_cast = add(x = var_315_cast, y = hidden_states_27_cast)[name = tensor<string, []>("op_345_cast")];
            tensor<int32, [5]> reshape_64_shape_0 = const()[name = tensor<string, []>("reshape_64_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_64_cast = reshape(shape = reshape_64_shape_0, x = var_345_cast)[name = tensor<string, []>("reshape_64_cast")];
            tensor<int32, [3]> reduce_mean_48_axes_0 = const()[name = tensor<string, []>("reduce_mean_48_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_48_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_48_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_48_cast = reduce_mean(axes = reduce_mean_48_axes_0, keep_dims = reduce_mean_48_keep_dims_0, x = reshape_64_cast)[name = tensor<string, []>("reduce_mean_48_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_32_cast = sub(x = reshape_64_cast, y = reduce_mean_48_cast)[name = tensor<string, []>("sub_32_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_16_cast = square(x = sub_32_cast)[name = tensor<string, []>("square_16_cast")];
            tensor<int32, [3]> reduce_mean_50_axes_0 = const()[name = tensor<string, []>("reduce_mean_50_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_50_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_50_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_50_cast = reduce_mean(axes = reduce_mean_50_axes_0, keep_dims = reduce_mean_50_keep_dims_0, x = square_16_cast)[name = tensor<string, []>("reduce_mean_50_cast")];
            tensor<fp16, []> add_32_y_0_to_fp16 = const()[name = tensor<string, []>("add_32_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_32_cast = add(x = reduce_mean_50_cast, y = add_32_y_0_to_fp16)[name = tensor<string, []>("add_32_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_16_cast = sqrt(x = add_32_cast)[name = tensor<string, []>("sqrt_16_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_16_cast = real_div(x = sub_32_cast, y = sqrt_16_cast)[name = tensor<string, []>("real_div_16_cast")];
            tensor<int32, [4]> reshape_65_shape_0 = const()[name = tensor<string, []>("reshape_65_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_65_cast = reshape(shape = reshape_65_shape_0, x = real_div_16_cast)[name = tensor<string, []>("reshape_65_cast")];
            tensor<fp16, [512]> add_33_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_33_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47270336)))];
            tensor<fp16, [512]> add_33_beta_0_to_fp16 = const()[name = tensor<string, []>("add_33_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47271424)))];
            tensor<fp16, []> add_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_33_cast = batch_norm(beta = add_33_beta_0_to_fp16, epsilon = add_33_epsilon_0_to_fp16, gamma = add_33_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_65_cast)[name = tensor<string, []>("add_33_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_117_cast = silu(x = add_33_cast)[name = tensor<string, []>("input_117_cast")];
            tensor<int32, [2]> var_364 = const()[name = tensor<string, []>("op_364"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_366 = const()[name = tensor<string, []>("op_366"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_0_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47272512)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_0_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51991168)))];
            tensor<fp16, [1, 512, 64, 64]> input_119_cast = conv(bias = encoder_mid_block_resnets_0_conv1_bias_to_fp16, dilations = var_366, groups = var_17, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = var_364, weight = encoder_mid_block_resnets_0_conv1_weight_to_fp16, x = input_117_cast)[name = tensor<string, []>("input_119_cast")];
            tensor<int32, [5]> reshape_68_shape_0 = const()[name = tensor<string, []>("reshape_68_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_68_cast = reshape(shape = reshape_68_shape_0, x = input_119_cast)[name = tensor<string, []>("reshape_68_cast")];
            tensor<int32, [3]> reduce_mean_51_axes_0 = const()[name = tensor<string, []>("reduce_mean_51_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_51_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_51_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_51_cast = reduce_mean(axes = reduce_mean_51_axes_0, keep_dims = reduce_mean_51_keep_dims_0, x = reshape_68_cast)[name = tensor<string, []>("reduce_mean_51_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_34_cast = sub(x = reshape_68_cast, y = reduce_mean_51_cast)[name = tensor<string, []>("sub_34_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_17_cast = square(x = sub_34_cast)[name = tensor<string, []>("square_17_cast")];
            tensor<int32, [3]> reduce_mean_53_axes_0 = const()[name = tensor<string, []>("reduce_mean_53_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_53_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_53_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_53_cast = reduce_mean(axes = reduce_mean_53_axes_0, keep_dims = reduce_mean_53_keep_dims_0, x = square_17_cast)[name = tensor<string, []>("reduce_mean_53_cast")];
            tensor<fp16, []> add_34_y_0_to_fp16 = const()[name = tensor<string, []>("add_34_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_34_cast = add(x = reduce_mean_53_cast, y = add_34_y_0_to_fp16)[name = tensor<string, []>("add_34_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_17_cast = sqrt(x = add_34_cast)[name = tensor<string, []>("sqrt_17_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_17_cast = real_div(x = sub_34_cast, y = sqrt_17_cast)[name = tensor<string, []>("real_div_17_cast")];
            tensor<int32, [4]> reshape_69_shape_0 = const()[name = tensor<string, []>("reshape_69_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_69_cast = reshape(shape = reshape_69_shape_0, x = real_div_17_cast)[name = tensor<string, []>("reshape_69_cast")];
            tensor<fp16, [512]> add_35_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_35_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51992256)))];
            tensor<fp16, [512]> add_35_beta_0_to_fp16 = const()[name = tensor<string, []>("add_35_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51993344)))];
            tensor<fp16, []> add_35_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_35_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_35_cast = batch_norm(beta = add_35_beta_0_to_fp16, epsilon = add_35_epsilon_0_to_fp16, gamma = add_35_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_69_cast)[name = tensor<string, []>("add_35_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_123_cast = silu(x = add_35_cast)[name = tensor<string, []>("input_123_cast")];
            tensor<int32, [2]> var_376 = const()[name = tensor<string, []>("op_376"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_378 = const()[name = tensor<string, []>("op_378"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_29_pad_type_0 = const()[name = tensor<string, []>("hidden_states_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_29_pad_0 = const()[name = tensor<string, []>("hidden_states_29_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_0_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(51994432)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_0_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_0_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56713088)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_29_cast = conv(bias = encoder_mid_block_resnets_0_conv2_bias_to_fp16, dilations = var_378, groups = var_17, pad = hidden_states_29_pad_0, pad_type = hidden_states_29_pad_type_0, strides = var_376, weight = encoder_mid_block_resnets_0_conv2_weight_to_fp16, x = input_123_cast)[name = tensor<string, []>("hidden_states_29_cast")];
            tensor<fp16, [1, 512, 64, 64]> var_381_cast = add(x = var_345_cast, y = hidden_states_29_cast)[name = tensor<string, []>("op_381_cast")];
            tensor<int32, [5]> reshape_72_shape_0 = const()[name = tensor<string, []>("reshape_72_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_72_cast = reshape(shape = reshape_72_shape_0, x = var_381_cast)[name = tensor<string, []>("reshape_72_cast")];
            tensor<int32, [3]> reduce_mean_54_axes_0 = const()[name = tensor<string, []>("reduce_mean_54_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_54_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_54_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_54_cast = reduce_mean(axes = reduce_mean_54_axes_0, keep_dims = reduce_mean_54_keep_dims_0, x = reshape_72_cast)[name = tensor<string, []>("reduce_mean_54_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_36_cast = sub(x = reshape_72_cast, y = reduce_mean_54_cast)[name = tensor<string, []>("sub_36_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_18_cast = square(x = sub_36_cast)[name = tensor<string, []>("square_18_cast")];
            tensor<int32, [3]> reduce_mean_56_axes_0 = const()[name = tensor<string, []>("reduce_mean_56_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_56_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_56_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_56_cast = reduce_mean(axes = reduce_mean_56_axes_0, keep_dims = reduce_mean_56_keep_dims_0, x = square_18_cast)[name = tensor<string, []>("reduce_mean_56_cast")];
            tensor<fp16, []> add_36_y_0_to_fp16 = const()[name = tensor<string, []>("add_36_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_36_cast = add(x = reduce_mean_56_cast, y = add_36_y_0_to_fp16)[name = tensor<string, []>("add_36_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_18_cast = sqrt(x = add_36_cast)[name = tensor<string, []>("sqrt_18_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_18_cast = real_div(x = sub_36_cast, y = sqrt_18_cast)[name = tensor<string, []>("real_div_18_cast")];
            tensor<int32, [4]> reshape_73_shape_0 = const()[name = tensor<string, []>("reshape_73_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_73_cast = reshape(shape = reshape_73_shape_0, x = real_div_18_cast)[name = tensor<string, []>("reshape_73_cast")];
            tensor<fp16, [512]> add_37_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_37_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56714176)))];
            tensor<fp16, [512]> add_37_beta_0_to_fp16 = const()[name = tensor<string, []>("add_37_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56715264)))];
            tensor<fp16, []> add_37_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_37_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_37_cast = batch_norm(beta = add_37_beta_0_to_fp16, epsilon = add_37_epsilon_0_to_fp16, gamma = add_37_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_73_cast)[name = tensor<string, []>("add_37_cast")];
            tensor<int32, [3]> var_400 = const()[name = tensor<string, []>("op_400"), val = tensor<int32, [3]>([1, 512, 4096])];
            tensor<fp16, [1, 512, 4096]> var_401_cast = reshape(shape = var_400, x = add_37_cast)[name = tensor<string, []>("op_401_cast")];
            tensor<int32, [3]> input_127_perm_0 = const()[name = tensor<string, []>("input_127_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_query_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_query_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56716352)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_query_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_query_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57240704)))];
            tensor<fp16, [1, 4096, 512]> transpose_6 = transpose(perm = input_127_perm_0, x = var_401_cast)[name = tensor<string, []>("transpose_6")];
            tensor<fp16, [1, 4096, 512]> tensor_1_cast = linear(bias = encoder_mid_block_attentions_0_query_bias_to_fp16, weight = encoder_mid_block_attentions_0_query_weight_to_fp16, x = transpose_6)[name = tensor<string, []>("tensor_1_cast")];
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_key_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_key_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57241792)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_key_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_key_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57766144)))];
            tensor<fp16, [1, 4096, 512]> tensor_7_cast = linear(bias = encoder_mid_block_attentions_0_key_bias_to_fp16, weight = encoder_mid_block_attentions_0_key_weight_to_fp16, x = transpose_6)[name = tensor<string, []>("tensor_7_cast")];
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_value_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_value_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57767232)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_value_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_value_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58291584)))];
            tensor<fp16, [1, 4096, 512]> tensor_13_cast = linear(bias = encoder_mid_block_attentions_0_value_bias_to_fp16, weight = encoder_mid_block_attentions_0_value_weight_to_fp16, x = transpose_6)[name = tensor<string, []>("tensor_13_cast")];
            tensor<int32, [4]> var_419 = const()[name = tensor<string, []>("op_419"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_3_cast = reshape(shape = var_419, x = tensor_1_cast)[name = tensor<string, []>("tensor_3_cast")];
            tensor<int32, [4]> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_428 = const()[name = tensor<string, []>("op_428"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_5 = transpose(perm = var_421, x = tensor_3_cast)[name = tensor<string, []>("transpose_5")];
            tensor<fp16, [1, 4096, 512]> query_proj_cast = reshape(shape = var_428, x = transpose_5)[name = tensor<string, []>("query_proj_cast")];
            tensor<int32, [4]> var_437 = const()[name = tensor<string, []>("op_437"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_9_cast = reshape(shape = var_437, x = tensor_7_cast)[name = tensor<string, []>("tensor_9_cast")];
            tensor<int32, [4]> var_439 = const()[name = tensor<string, []>("op_439"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_446 = const()[name = tensor<string, []>("op_446"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_4 = transpose(perm = var_439, x = tensor_9_cast)[name = tensor<string, []>("transpose_4")];
            tensor<fp16, [1, 4096, 512]> key_proj_cast = reshape(shape = var_446, x = transpose_4)[name = tensor<string, []>("key_proj_cast")];
            tensor<int32, [4]> var_455 = const()[name = tensor<string, []>("op_455"), val = tensor<int32, [4]>([1, 4096, 1, 512])];
            tensor<fp16, [1, 4096, 1, 512]> tensor_15_cast = reshape(shape = var_455, x = tensor_13_cast)[name = tensor<string, []>("tensor_15_cast")];
            tensor<int32, [4]> var_457 = const()[name = tensor<string, []>("op_457"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_464 = const()[name = tensor<string, []>("op_464"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> transpose_3 = transpose(perm = var_457, x = tensor_15_cast)[name = tensor<string, []>("transpose_3")];
            tensor<fp16, [1, 4096, 512]> value_proj_cast = reshape(shape = var_464, x = transpose_3)[name = tensor<string, []>("value_proj_cast")];
            tensor<int32, [3]> var_471_perm_0 = const()[name = tensor<string, []>("op_471_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<fp16, []> var_5_to_fp16 = const()[name = tensor<string, []>("op_5_to_fp16"), val = tensor<fp16, []>(0x1.6ap-5)];
            tensor<fp16, [1, 4096, 512]> query_proj_scaled_cast = mul(x = var_5_to_fp16, y = query_proj_cast)[name = tensor<string, []>("query_proj_scaled_cast")];
            tensor<bool, []> attention_scores_1_bmm_transpose_x_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> attention_scores_1_bmm_transpose_y_0 = const()[name = tensor<string, []>("attention_scores_1_bmm_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 4096]> transpose_2 = transpose(perm = var_471_perm_0, x = key_proj_cast)[name = tensor<string, []>("transpose_2")];
            tensor<fp16, [1, 4096, 4096]> attention_scores_1_bmm_cast = matmul(transpose_x = attention_scores_1_bmm_transpose_x_0, transpose_y = attention_scores_1_bmm_transpose_y_0, x = query_proj_scaled_cast, y = transpose_2)[name = tensor<string, []>("attention_scores_1_bmm_cast")];
            tensor<fp16, [1, 4096, 4096]> var_474_cast = softmax(axis = var_7, x = attention_scores_1_bmm_cast)[name = tensor<string, []>("op_474_cast")];
            tensor<bool, []> tensor_19_transpose_x_0 = const()[name = tensor<string, []>("tensor_19_transpose_x_0"), val = tensor<bool, []>(false)];
            tensor<bool, []> tensor_19_transpose_y_0 = const()[name = tensor<string, []>("tensor_19_transpose_y_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4096, 512]> tensor_19_cast = matmul(transpose_x = tensor_19_transpose_x_0, transpose_y = tensor_19_transpose_y_0, x = var_474_cast, y = value_proj_cast)[name = tensor<string, []>("tensor_19_cast")];
            tensor<int32, [4]> var_485 = const()[name = tensor<string, []>("op_485"), val = tensor<int32, [4]>([1, 1, 4096, 512])];
            tensor<fp16, [1, 1, 4096, 512]> tensor_cast = reshape(shape = var_485, x = tensor_19_cast)[name = tensor<string, []>("tensor_cast")];
            tensor<int32, [4]> var_487 = const()[name = tensor<string, []>("op_487"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [3]> var_492 = const()[name = tensor<string, []>("op_492"), val = tensor<int32, [3]>([1, 4096, 512])];
            tensor<fp16, [1, 4096, 1, 512]> transpose_1 = transpose(perm = var_487, x = tensor_cast)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 4096, 512]> input_129_cast = reshape(shape = var_492, x = transpose_1)[name = tensor<string, []>("input_129_cast")];
            tensor<fp16, [512, 512]> encoder_mid_block_attentions_0_proj_attn_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_proj_attn_weight_to_fp16"), val = tensor<fp16, [512, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58292672)))];
            tensor<fp16, [512]> encoder_mid_block_attentions_0_proj_attn_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_attentions_0_proj_attn_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58817024)))];
            tensor<fp16, [1, 4096, 512]> hidden_states_35_cast = linear(bias = encoder_mid_block_attentions_0_proj_attn_bias_to_fp16, weight = encoder_mid_block_attentions_0_proj_attn_weight_to_fp16, x = input_129_cast)[name = tensor<string, []>("hidden_states_35_cast")];
            tensor<int32, [3]> var_497_perm_0 = const()[name = tensor<string, []>("op_497_perm_0"), val = tensor<int32, [3]>([0, -1, -2])];
            tensor<int32, [4]> var_498 = const()[name = tensor<string, []>("op_498"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 4096]> transpose_0 = transpose(perm = var_497_perm_0, x = hidden_states_35_cast)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_37_cast = reshape(shape = var_498, x = transpose_0)[name = tensor<string, []>("hidden_states_37_cast")];
            tensor<fp16, [1, 512, 64, 64]> var_500_cast = add(x = hidden_states_37_cast, y = var_381_cast)[name = tensor<string, []>("op_500_cast")];
            tensor<int32, [5]> reshape_76_shape_0 = const()[name = tensor<string, []>("reshape_76_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_76_cast = reshape(shape = reshape_76_shape_0, x = var_500_cast)[name = tensor<string, []>("reshape_76_cast")];
            tensor<int32, [3]> reduce_mean_57_axes_0 = const()[name = tensor<string, []>("reduce_mean_57_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_57_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_57_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_57_cast = reduce_mean(axes = reduce_mean_57_axes_0, keep_dims = reduce_mean_57_keep_dims_0, x = reshape_76_cast)[name = tensor<string, []>("reduce_mean_57_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_38_cast = sub(x = reshape_76_cast, y = reduce_mean_57_cast)[name = tensor<string, []>("sub_38_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_19_cast = square(x = sub_38_cast)[name = tensor<string, []>("square_19_cast")];
            tensor<int32, [3]> reduce_mean_59_axes_0 = const()[name = tensor<string, []>("reduce_mean_59_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_59_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_59_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_59_cast = reduce_mean(axes = reduce_mean_59_axes_0, keep_dims = reduce_mean_59_keep_dims_0, x = square_19_cast)[name = tensor<string, []>("reduce_mean_59_cast")];
            tensor<fp16, []> add_38_y_0_to_fp16 = const()[name = tensor<string, []>("add_38_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_38_cast = add(x = reduce_mean_59_cast, y = add_38_y_0_to_fp16)[name = tensor<string, []>("add_38_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_19_cast = sqrt(x = add_38_cast)[name = tensor<string, []>("sqrt_19_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_19_cast = real_div(x = sub_38_cast, y = sqrt_19_cast)[name = tensor<string, []>("real_div_19_cast")];
            tensor<int32, [4]> reshape_77_shape_0 = const()[name = tensor<string, []>("reshape_77_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_77_cast = reshape(shape = reshape_77_shape_0, x = real_div_19_cast)[name = tensor<string, []>("reshape_77_cast")];
            tensor<fp16, [512]> add_39_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_39_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58818112)))];
            tensor<fp16, [512]> add_39_beta_0_to_fp16 = const()[name = tensor<string, []>("add_39_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58819200)))];
            tensor<fp16, []> add_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_39_cast = batch_norm(beta = add_39_beta_0_to_fp16, epsilon = add_39_epsilon_0_to_fp16, gamma = add_39_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_77_cast)[name = tensor<string, []>("add_39_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_135_cast = silu(x = add_39_cast)[name = tensor<string, []>("input_135_cast")];
            tensor<int32, [2]> var_513 = const()[name = tensor<string, []>("op_513"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_515 = const()[name = tensor<string, []>("op_515"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_137_pad_type_0 = const()[name = tensor<string, []>("input_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_137_pad_0 = const()[name = tensor<string, []>("input_137_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_1_conv1_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv1_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58820288)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_1_conv1_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv1_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63538944)))];
            tensor<fp16, [1, 512, 64, 64]> input_137_cast = conv(bias = encoder_mid_block_resnets_1_conv1_bias_to_fp16, dilations = var_515, groups = var_17, pad = input_137_pad_0, pad_type = input_137_pad_type_0, strides = var_513, weight = encoder_mid_block_resnets_1_conv1_weight_to_fp16, x = input_135_cast)[name = tensor<string, []>("input_137_cast")];
            tensor<int32, [5]> reshape_80_shape_0 = const()[name = tensor<string, []>("reshape_80_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_80_cast = reshape(shape = reshape_80_shape_0, x = input_137_cast)[name = tensor<string, []>("reshape_80_cast")];
            tensor<int32, [3]> reduce_mean_60_axes_0 = const()[name = tensor<string, []>("reduce_mean_60_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_60_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_60_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_60_cast = reduce_mean(axes = reduce_mean_60_axes_0, keep_dims = reduce_mean_60_keep_dims_0, x = reshape_80_cast)[name = tensor<string, []>("reduce_mean_60_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_40_cast = sub(x = reshape_80_cast, y = reduce_mean_60_cast)[name = tensor<string, []>("sub_40_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_20_cast = square(x = sub_40_cast)[name = tensor<string, []>("square_20_cast")];
            tensor<int32, [3]> reduce_mean_62_axes_0 = const()[name = tensor<string, []>("reduce_mean_62_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_62_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_62_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_62_cast = reduce_mean(axes = reduce_mean_62_axes_0, keep_dims = reduce_mean_62_keep_dims_0, x = square_20_cast)[name = tensor<string, []>("reduce_mean_62_cast")];
            tensor<fp16, []> add_40_y_0_to_fp16 = const()[name = tensor<string, []>("add_40_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_40_cast = add(x = reduce_mean_62_cast, y = add_40_y_0_to_fp16)[name = tensor<string, []>("add_40_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_20_cast = sqrt(x = add_40_cast)[name = tensor<string, []>("sqrt_20_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_20_cast = real_div(x = sub_40_cast, y = sqrt_20_cast)[name = tensor<string, []>("real_div_20_cast")];
            tensor<int32, [4]> reshape_81_shape_0 = const()[name = tensor<string, []>("reshape_81_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_81_cast = reshape(shape = reshape_81_shape_0, x = real_div_20_cast)[name = tensor<string, []>("reshape_81_cast")];
            tensor<fp16, [512]> add_41_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_41_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63540032)))];
            tensor<fp16, [512]> add_41_beta_0_to_fp16 = const()[name = tensor<string, []>("add_41_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63541120)))];
            tensor<fp16, []> add_41_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_41_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_41_cast = batch_norm(beta = add_41_beta_0_to_fp16, epsilon = add_41_epsilon_0_to_fp16, gamma = add_41_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_81_cast)[name = tensor<string, []>("add_41_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_141_cast = silu(x = add_41_cast)[name = tensor<string, []>("input_141_cast")];
            tensor<int32, [2]> var_525 = const()[name = tensor<string, []>("op_525"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_527 = const()[name = tensor<string, []>("op_527"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> hidden_states_pad_type_0 = const()[name = tensor<string, []>("hidden_states_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> hidden_states_pad_0 = const()[name = tensor<string, []>("hidden_states_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [512, 512, 3, 3]> encoder_mid_block_resnets_1_conv2_weight_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv2_weight_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63542208)))];
            tensor<fp16, [512]> encoder_mid_block_resnets_1_conv2_bias_to_fp16 = const()[name = tensor<string, []>("encoder_mid_block_resnets_1_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68260864)))];
            tensor<fp16, [1, 512, 64, 64]> hidden_states_cast = conv(bias = encoder_mid_block_resnets_1_conv2_bias_to_fp16, dilations = var_527, groups = var_17, pad = hidden_states_pad_0, pad_type = hidden_states_pad_type_0, strides = var_525, weight = encoder_mid_block_resnets_1_conv2_weight_to_fp16, x = input_141_cast)[name = tensor<string, []>("hidden_states_cast")];
            tensor<fp16, [1, 512, 64, 64]> var_530_cast = add(x = var_500_cast, y = hidden_states_cast)[name = tensor<string, []>("op_530_cast")];
            tensor<int32, [5]> reshape_84_shape_0 = const()[name = tensor<string, []>("reshape_84_shape_0"), val = tensor<int32, [5]>([1, 32, 16, 64, 64])];
            tensor<fp16, [1, 32, 16, 64, 64]> reshape_84_cast = reshape(shape = reshape_84_shape_0, x = var_530_cast)[name = tensor<string, []>("reshape_84_cast")];
            tensor<int32, [3]> reduce_mean_63_axes_0 = const()[name = tensor<string, []>("reduce_mean_63_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_63_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_63_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_63_cast = reduce_mean(axes = reduce_mean_63_axes_0, keep_dims = reduce_mean_63_keep_dims_0, x = reshape_84_cast)[name = tensor<string, []>("reduce_mean_63_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> sub_42_cast = sub(x = reshape_84_cast, y = reduce_mean_63_cast)[name = tensor<string, []>("sub_42_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> square_21_cast = square(x = sub_42_cast)[name = tensor<string, []>("square_21_cast")];
            tensor<int32, [3]> reduce_mean_65_axes_0 = const()[name = tensor<string, []>("reduce_mean_65_axes_0"), val = tensor<int32, [3]>([2, 3, 4])];
            tensor<bool, []> reduce_mean_65_keep_dims_0 = const()[name = tensor<string, []>("reduce_mean_65_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 32, 1, 1, 1]> reduce_mean_65_cast = reduce_mean(axes = reduce_mean_65_axes_0, keep_dims = reduce_mean_65_keep_dims_0, x = square_21_cast)[name = tensor<string, []>("reduce_mean_65_cast")];
            tensor<fp16, []> add_42_y_0_to_fp16 = const()[name = tensor<string, []>("add_42_y_0_to_fp16"), val = tensor<fp16, []>(0x1.1p-20)];
            tensor<fp16, [1, 32, 1, 1, 1]> add_42_cast = add(x = reduce_mean_65_cast, y = add_42_y_0_to_fp16)[name = tensor<string, []>("add_42_cast")];
            tensor<fp16, [1, 32, 1, 1, 1]> sqrt_21_cast = sqrt(x = add_42_cast)[name = tensor<string, []>("sqrt_21_cast")];
            tensor<fp16, [1, 32, 16, 64, 64]> real_div_21_cast = real_div(x = sub_42_cast, y = sqrt_21_cast)[name = tensor<string, []>("real_div_21_cast")];
            tensor<int32, [4]> reshape_85_shape_0 = const()[name = tensor<string, []>("reshape_85_shape_0"), val = tensor<int32, [4]>([1, 512, 64, 64])];
            tensor<fp16, [1, 512, 64, 64]> reshape_85_cast = reshape(shape = reshape_85_shape_0, x = real_div_21_cast)[name = tensor<string, []>("reshape_85_cast")];
            tensor<fp16, [512]> add_43_gamma_0_to_fp16 = const()[name = tensor<string, []>("add_43_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68261952)))];
            tensor<fp16, [512]> add_43_beta_0_to_fp16 = const()[name = tensor<string, []>("add_43_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68263040)))];
            tensor<fp16, []> add_43_epsilon_0_to_fp16 = const()[name = tensor<string, []>("add_43_epsilon_0_to_fp16"), val = tensor<fp16, []>(0x1.5p-17)];
            tensor<fp16, [1, 512, 64, 64]> add_43_cast = batch_norm(beta = add_43_beta_0_to_fp16, epsilon = add_43_epsilon_0_to_fp16, gamma = add_43_gamma_0_to_fp16, mean = add_19_mean_0_to_fp16, variance = add_19_variance_0_to_fp16, x = reshape_85_cast)[name = tensor<string, []>("add_43_cast")];
            tensor<fp16, [1, 512, 64, 64]> input_149_cast = silu(x = add_43_cast)[name = tensor<string, []>("input_149_cast")];
            tensor<int32, [2]> var_539 = const()[name = tensor<string, []>("op_539"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_541 = const()[name = tensor<string, []>("op_541"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_pad_type_0 = const()[name = tensor<string, []>("input_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_pad_0 = const()[name = tensor<string, []>("input_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [8, 512, 3, 3]> encoder_conv_out_weight_to_fp16 = const()[name = tensor<string, []>("encoder_conv_out_weight_to_fp16"), val = tensor<fp16, [8, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68264128)))];
            tensor<fp16, [8]> encoder_conv_out_bias_to_fp16 = const()[name = tensor<string, []>("encoder_conv_out_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.734p-9, 0x1.0f4p-8, 0x1.afp-6, -0x1.494p-7, -0x1.ep-9, -0x1.924p-8, -0x1.1dp-10, -0x1.4b8p-8])];
            tensor<fp16, [1, 8, 64, 64]> input_cast = conv(bias = encoder_conv_out_bias_to_fp16, dilations = var_541, groups = var_17, pad = input_pad_0, pad_type = input_pad_type_0, strides = var_539, weight = encoder_conv_out_weight_to_fp16, x = input_149_cast)[name = tensor<string, []>("input_cast")];
            tensor<int32, []> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_550 = const()[name = tensor<string, []>("op_550"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_552 = const()[name = tensor<string, []>("op_552"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_554_pad_type_0 = const()[name = tensor<string, []>("op_554_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_554_pad_0 = const()[name = tensor<string, []>("op_554_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 8, 1, 1]> quant_conv_weight_to_fp16 = const()[name = tensor<string, []>("quant_conv_weight_to_fp16"), val = tensor<fp16, [8, 8, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68337920)))];
            tensor<fp16, [8]> quant_conv_bias_to_fp16 = const()[name = tensor<string, []>("quant_conv_bias_to_fp16"), val = tensor<fp16, [8]>([0x1.8cp-3, 0x1.d68p-4, -0x1.b8cp-4, -0x1.5fp-2, -0x1.284p+1, -0x1.09cp+1, -0x1.178p+1, -0x1.1d8p+1])];
            tensor<fp16, [1, 8, 64, 64]> var_554_cast = conv(bias = quant_conv_bias_to_fp16, dilations = var_552, groups = var_547, pad = var_554_pad_0, pad_type = var_554_pad_type_0, strides = var_550, weight = quant_conv_weight_to_fp16, x = input_cast)[name = tensor<string, []>("op_554_cast")];
            tensor<string, []> var_554_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_554_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 8, 64, 64]> latent = cast(dtype = var_554_cast_to_fp32_dtype_0, x = var_554_cast)[name = tensor<string, []>("cast_34")];
        } -> (latent);
}